<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Pages on Jan Ole von Hartz</title><link>https://vonhartz.info/pages/</link><description>Recent content in Pages on Jan Ole von Hartz</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 23 Nov 2022 13:31:09 +0100</lastBuildDate><atom:link href="https://vonhartz.info/pages/index.xml" rel="self" type="application/rss+xml"/><item><title>Welcome</title><link>https://vonhartz.info/pages/welcome/</link><pubDate>Wed, 23 Nov 2022 13:31:09 +0100</pubDate><guid>https://vonhartz.info/pages/welcome/</guid><description>This website is an experiment of sorts. Over the last year or so, I have been playing around with logseq as a note taking tool. Looking for a way to better share my notes, I have found the Schrodinger plugin by Aryan Sawhney.
This is what happened next.</description></item><item><title>Discrete Filter Debug</title><link>https://vonhartz.info/pages/discrete-filter-debug/</link><pubDate>Wed, 23 Nov 2022 00:00:00 +0000</pubDate><guid>https://vonhartz.info/pages/discrete-filter-debug/</guid><description>This is a test/examle post.
How to
&amp;gt;&amp;gt;&amp;gt; import torch &amp;gt;&amp;gt;&amp;gt; import matplotlib.pyplot as plt &amp;gt;&amp;gt;&amp;gt; def plot(pr, sm, po, channel): ... for i, d in enumerate([pr[channel], sm[channel], po[channel], (sm*pr)[channel]]): ... plt.subplot(1, 4, i+1) ... plt.imshow(d) ... plt.show() &amp;gt;&amp;gt;&amp;gt; pr = torch.load(&amp;#39;/export/hartzj/TakeLidOffSaucepan/demos_gt/encodings/dcm_10_keypoints_encoder-resnet101bs128split9010/new_ego/2022_05_03-14_34_44/cam_w_prior/80.dat&amp;#39;) &amp;gt;&amp;gt;&amp;gt; po = torch.load(&amp;#39;/export/hartzj/TakeLidOffSaucepan/demos_gt/encodings/dcm_10_keypoints_encoder-resnet101bs128split9010/new_ego/2022_05_03-14_34_44/cam_w_post/80.dat&amp;#39;) &amp;gt;&amp;gt;&amp;gt; sm = torch.load(&amp;#39;/export/hartzj/TakeLidOffSaucepan/demos_gt/encodings/dcm_10_keypoints_encoder-resnet101bs128split9010/new_ego/2022_05_03-14_34_44/cam_w_sm/80.dat&amp;#39;) Results for sigma=2
Channels: 10, 2, 14
While on 2 it resolves the multimodality, on channel 10 it does not manage to do it.</description></item></channel></rss>